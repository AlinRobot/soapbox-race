/*
 * Created on 28 Apr 2016 ( Time 00:21:55 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package br.com.soapboxrace.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.math.BigDecimal;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "PERSONA"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="PERSONA", schema="SOAPBOX", catalog="SOAPBOX" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PersonaEntity.countAll", query="SELECT COUNT(x) FROM PersonaEntity x" )
} )
public class PersonaEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="ID", nullable=false)
    private Long       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="CASH")
    private BigDecimal cash         ;

    @Column(name="ICONINDEX")
    private Integer    iconIndex    ;

    @Column(name="LEVEL")
    private Integer    level        ;

    @Column(name="MOTTO", length=500)
    private String     motto        ;

    @Column(name="NAME", length=50)
    private String     name         ;

    @Column(name="PERCENTTOLEVEL")
    private BigDecimal percentToLevel ;

    @Column(name="RATING")
    private BigDecimal rating       ;

    @Column(name="REP")
    private BigDecimal rep          ;

    @Column(name="REPATCURRENTLEVEL")
    private BigDecimal repAtCurrentLevel ;

    @Column(name="SCORE")
    private BigDecimal score        ;

    @Column(name="CURCARINDEX", nullable=false)
    private Integer    curCarIndex  ;

	// "userId" (column "USERID") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="persona", targetEntity=LobbyEntrantEntity.class)
	private List<LobbyEntrantEntity> listOfLobbyentrant;
    @OneToMany(mappedBy="persona", targetEntity=OwnedCarEntity.class)
	private List<OwnedCarEntity> listOfOwnedcar;
    @ManyToOne
    @JoinColumn(name="USERID", referencedColumnName="ID")
	private UserEntity user        ;

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PersonaEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id ) {
        this.id = id ;
    }
    public Long getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : CASH ( DECIMAL ) 
    public void setCash( BigDecimal cash ) {
        this.cash = cash;
    }
    public BigDecimal getCash() {
        return this.cash;
    }

    //--- DATABASE MAPPING : ICONINDEX ( INTEGER ) 
    public void setIconIndex( Integer iconIndex ) {
        this.iconIndex = iconIndex;
    }
    public Integer getIconIndex() {
        return this.iconIndex;
    }

    //--- DATABASE MAPPING : LEVEL ( INTEGER ) 
    public void setLevel( Integer level ) {
        this.level = level;
    }
    public Integer getLevel() {
        return this.level;
    }

    //--- DATABASE MAPPING : MOTTO ( VARCHAR ) 
    public void setMotto( String motto ) {
        this.motto = motto;
    }
    public String getMotto() {
        return this.motto;
    }

    //--- DATABASE MAPPING : NAME ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : PERCENTTOLEVEL ( DECIMAL ) 
    public void setPercentToLevel( BigDecimal percentToLevel ) {
        this.percentToLevel = percentToLevel;
    }
    public BigDecimal getPercentToLevel() {
        return this.percentToLevel;
    }

    //--- DATABASE MAPPING : RATING ( DECIMAL ) 
    public void setRating( BigDecimal rating ) {
        this.rating = rating;
    }
    public BigDecimal getRating() {
        return this.rating;
    }

    //--- DATABASE MAPPING : REP ( DECIMAL ) 
    public void setRep( BigDecimal rep ) {
        this.rep = rep;
    }
    public BigDecimal getRep() {
        return this.rep;
    }

    //--- DATABASE MAPPING : REPATCURRENTLEVEL ( DECIMAL ) 
    public void setRepAtCurrentLevel( BigDecimal repAtCurrentLevel ) {
        this.repAtCurrentLevel = repAtCurrentLevel;
    }
    public BigDecimal getRepAtCurrentLevel() {
        return this.repAtCurrentLevel;
    }

    //--- DATABASE MAPPING : SCORE ( DECIMAL ) 
    public void setScore( BigDecimal score ) {
        this.score = score;
    }
    public BigDecimal getScore() {
        return this.score;
    }

    //--- DATABASE MAPPING : CURCARINDEX ( INTEGER ) 
    public void setCurCarIndex( Integer curCarIndex ) {
        this.curCarIndex = curCarIndex;
    }
    public Integer getCurCarIndex() {
        return this.curCarIndex;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfLobbyentrant( List<LobbyEntrantEntity> listOfLobbyentrant ) {
        this.listOfLobbyentrant = listOfLobbyentrant;
    }
    public List<LobbyEntrantEntity> getListOfLobbyentrant() {
        return this.listOfLobbyentrant;
    }

    public void setListOfOwnedcar( List<OwnedCarEntity> listOfOwnedcar ) {
        this.listOfOwnedcar = listOfOwnedcar;
    }
    public List<OwnedCarEntity> getListOfOwnedcar() {
        return this.listOfOwnedcar;
    }

    public void setUser( UserEntity user ) {
        this.user = user;
    }
    public UserEntity getUser() {
        return this.user;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(cash);
        sb.append("|");
        sb.append(iconIndex);
        sb.append("|");
        sb.append(level);
        sb.append("|");
        sb.append(motto);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(percentToLevel);
        sb.append("|");
        sb.append(rating);
        sb.append("|");
        sb.append(rep);
        sb.append("|");
        sb.append(repAtCurrentLevel);
        sb.append("|");
        sb.append(score);
        sb.append("|");
        sb.append(curCarIndex);
        return sb.toString(); 
    } 

}
